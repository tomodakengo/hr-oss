version: '3.8'

services:
  # PostgreSQL データベース
  postgres:
    image: postgres:15-alpine
    container_name: hr-oss-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hr_oss
      POSTGRES_USER: hr_user
      POSTGRES_PASSWORD: hr_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hr_user -d hr_oss"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - hr-oss-network

  # Redis (セッション・キャッシュ用)
  redis:
    image: redis:7-alpine
    container_name: hr-oss-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - hr-oss-network

  # バックエンドAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hr-oss-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hr_user:hr_password@postgres:5432/hr_oss
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key
      PORT: 3001
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
      - backend_node_modules:/app/node_modules
    networks:
      - hr-oss-network

  # フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hr-oss-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      WATCHPACK_POLLING: 'true'
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - frontend_node_modules:/app/node_modules
    networks:
      - hr-oss-network

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  hr-oss-network:
    driver: bridge